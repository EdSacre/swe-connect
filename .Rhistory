library(terra)
library(prioritizr)
library(sf)
library(ggplot2)
library(dplyr)
library(tidyr)
library(rio)
library(ggthemes)
library(ggpubr)
library(gridExtra)
library(cowplot)
meta <- rio::import("spec_list.xlsx", sheet = "species")
# Create base planning units
pu <- rast("grid.tif")+1
plot(pu)
mpa <- rast("outputs/mpas/mpas.tif")
# Note there are no category II reserves in the study area, though they would be considered strict
mpa_strict <- mpa[[c("Nature reserve (Ia)", "Nature reserve (Ib)")]]
mpa_strict <- app(mpa_strict, fun = "sum")
mpa <- app(mpa, fun = "sum")
mpa <- mpa*pu
plot(c(pu, mpa))
# All MPAs
mpa_cells <- sum(values(mpa, na.rm = T))
mpa_prop <- sum(values(mpa, na.rm = T)) / sum(values(pu, na.rm = T))
cat("\nNumber of MPA cells:", mpa_cells)
cat("\nProportion of study area covered by MPA network:", mpa_prop)
# Strict MPAs
mpa_cells_strict <- sum(values(mpa_strict, na.rm = T))
mpa_prop_strict <- sum(values(mpa_strict, na.rm = T)) / sum(values(pu, na.rm = T))
cat("\nNumber of strict MPA cells:", mpa_cells_strict)
cat("\nProportion of study area covered by strict MPAs:", mpa_prop_strict)
meta <- rio::import("spec_list.xlsx", sheet = "species")
l1 <- list.files("outputs/connectivity_source_strength", pattern = "\\.tif$", full.names = TRUE)
l2 <- list.files("outputs/connectivity_vulnerability", pattern = "\\.tif$", full.names = TRUE)
l3 <- list.files("inputs/habs_standard", pattern = "\\.tif$", full.names = TRUE)
l <- c(l1,l2, l3)
n1 <- list.files("outputs/connectivity_source_strength", pattern = "\\.tif$")
n2 <- list.files("outputs/connectivity_vulnerability", pattern = "\\.tif$")
n3 <- list.files("inputs/habs_standard", pattern = "\\.tif$")
n <- c(n1,n2,n3)
n <- tools::file_path_sans_ext(n)
feat <- rast(l)
names(feat) <- n
feat <- feat * pu
plot(feat)
df <- data.frame()
for(i in 1:nlyr(feat)){
m <- matrix(nrow = nlyr(mpa), ncol = 4)
colnames(m) <- c("spec", "spec_total",  "class", "spec_class")
dftemp <- as_tibble(m)
spec <- feat[[i]]
temp <- spec * mpa
sc <- sapply(1:nlyr(temp), function(i) sum(values(temp[[i]]), na.rm = TRUE))
dftemp$spec <- names(spec)
dftemp$spec_total <- sum(values(spec), na.rm = TRUE)
dftemp$class <- names(mpa)
dftemp$spec_class <- sc
df <- rbind(df, dftemp)
}
gc()
library(terra)
library(prioritizr)
library(sf)
library(ggplot2)
library(dplyr)
library(tidyr)
library(rio)
library(ggthemes)
library(ggpubr)
library(gridExtra)
library(cowplot)
meta <- rio::import("spec_list.xlsx", sheet = "species")
# Create base planning units
pu <- rast("grid.tif")+1
plot(pu)
mpa <- rast("outputs/mpas/mpas.tif")
# Note there are no category II reserves in the study area, though they would be considered strict
mpa_strict <- mpa[[c("Nature reserve (Ia)", "Nature reserve (Ib)")]]
mpa_strict <- app(mpa_strict, fun = "sum")
mpa <- app(mpa, fun = "sum")
mpa <- mpa*pu
plot(c(pu, mpa))
# All MPAs
mpa_cells <- sum(values(mpa, na.rm = T))
mpa_prop <- sum(values(mpa, na.rm = T)) / sum(values(pu, na.rm = T))
cat("\nNumber of MPA cells:", mpa_cells)
cat("\nProportion of study area covered by MPA network:", mpa_prop)
# Strict MPAs
mpa_cells_strict <- sum(values(mpa_strict, na.rm = T))
mpa_prop_strict <- sum(values(mpa_strict, na.rm = T)) / sum(values(pu, na.rm = T))
cat("\nNumber of strict MPA cells:", mpa_cells_strict)
cat("\nProportion of study area covered by strict MPAs:", mpa_prop_strict)
meta <- rio::import("spec_list.xlsx", sheet = "species")
l1 <- list.files("outputs/connectivity_source_strength", pattern = "\\.tif$", full.names = TRUE)
l2 <- list.files("outputs/connectivity_vulnerability", pattern = "\\.tif$", full.names = TRUE)
l3 <- list.files("inputs/habs_standard", pattern = "\\.tif$", full.names = TRUE)
l <- c(l1,l2, l3)
n1 <- list.files("outputs/connectivity_source_strength", pattern = "\\.tif$")
n2 <- list.files("outputs/connectivity_vulnerability", pattern = "\\.tif$")
n3 <- list.files("inputs/habs_standard", pattern = "\\.tif$")
n <- c(n1,n2,n3)
n <- tools::file_path_sans_ext(n)
feat <- rast(l)
names(feat) <- n
feat <- feat * pu
plot(feat)
df <- data.frame()
for(i in 1:nlyr(feat)){
m <- matrix(nrow = nlyr(mpa), ncol = 4)
colnames(m) <- c("spec", "spec_total",  "class", "spec_class")
dftemp <- as_tibble(m)
spec <- feat[[i]]
temp <- spec * mpa
sc <- sapply(1:nlyr(temp), function(i) sum(values(temp[[i]]), na.rm = TRUE))
dftemp$spec <- names(spec)
dftemp$spec_total <- sum(values(spec), na.rm = TRUE)
dftemp$class <- names(mpa)
dftemp$spec_class <- sc
df <- rbind(df, dftemp)
}
df$spec_prop <- df$spec_class / df$spec_total
df_mpa <- df
df <- data.frame()
for(i in 1:nlyr(feat)){
m <- matrix(nrow = nlyr(mpa_strict), ncol = 4)
colnames(m) <- c("spec", "spec_total",  "class", "spec_class")
dftemp <- as_tibble(m)
spec <- feat[[i]]
temp <- spec * mpa_strict
sc <- sapply(1:nlyr(temp), function(i) sum(values(temp[[i]]), na.rm = TRUE))
dftemp$spec <- names(spec)
dftemp$spec_total <- sum(values(spec), na.rm = TRUE)
dftemp$class <- names(mpa_strict)
dftemp$spec_class <- sc
df <- rbind(df, dftemp)
}
df$spec_prop <- df$spec_class / df$spec_total
df_mpa_strict <- df
fdf <- data.frame("species" = rep(meta$english, 3))
fdf$feature <- NA
fdf$feature[1:16] <- "Source connectivity"
fdf$feature[17:32] <- "Vulnerability"
fdf$feature[33:48] <- "Habitat"
fdf$prop_mpa <- round(df_mpa$spec_prop*100, digits = 0)
fdf$prop_mpa_strict <- round(df_mpa_strict$spec_prop*100, digits = 0)
pdf <- filter(fdf, feature == "Source connectivity")
pdf <- pdf %>% arrange(-prop_mpa)
ord <- pdf$species
pdf$species <- factor(pdf$species, levels = ord)
g1 <- ggplot(pdf, aes(y = species))+
geom_vline(xintercept = (mpa_prop*100), colour = "#4f94cd90", linetype = "dashed")+
geom_vline(xintercept = (mpa_prop_strict*100), colour = "grey60", linetype = "dashed")+
geom_segment(aes(x = prop_mpa_strict, xend = prop_mpa, yend = species), colour = "grey80", size = 1)+
geom_point(aes(x = prop_mpa), size = 4, color = "#4f94cd")+
geom_point(aes(x = prop_mpa_strict), size = 4, color = "grey70")+
scale_x_continuous(limits = c(0, 75), breaks = c(0,25,50,75))+
xlab("Protection (%)")+
ylab("")+
labs(title = "")+
theme(plot.margin = unit(c(0,0,0,0), "cm"))+
theme_classic()
g1
pdf <- filter(fdf, feature == "Vulnerability")
pdf <- pdf %>% arrange(factor(species, levels = ord))
pdf$species <- factor(pdf$species, levels = ord)
g2 <- ggplot(pdf, aes(y = species))+
geom_vline(xintercept = (mpa_prop*100), colour = "#cd853f90", linetype = "dashed")+
geom_vline(xintercept = (mpa_prop_strict*100), colour = "grey60", linetype = "dashed")+
geom_segment(aes(x = prop_mpa_strict, xend = prop_mpa, yend = species), colour = "grey80", size = 1)+
geom_point(aes(x = prop_mpa), size = 4, color = "tan3")+
geom_point(aes(x = prop_mpa_strict), size = 4, color = "grey70")+
scale_x_continuous(limits = c(0, 75), breaks = c(0,25,50,75))+
xlab("Protection (%)")+
ylab("")+
labs(title = "")+
theme(plot.margin = unit(c(0,0,0,0), "cm"))+
theme_classic()
g2
pdf <- filter(fdf, feature == "Habitat")
pdf <- pdf %>% arrange(factor(species, levels = ord))
pdf$species <- factor(pdf$species, levels = ord)
g3 <- ggplot(pdf, aes(y = species))+
geom_vline(xintercept = (mpa_prop*100), colour = "#41ae7690", linetype = "dashed")+
geom_vline(xintercept = (mpa_prop_strict*100), colour = "grey60", linetype = "dashed")+
geom_segment(aes(x = prop_mpa_strict, xend = prop_mpa, yend = species), colour = "grey80", size = 1)+
geom_point(aes(x = prop_mpa), size = 4, color = "#41ae76")+
geom_point(aes(x = prop_mpa_strict), size = 4, color = "grey70")+
scale_x_continuous(limits = c(0, 75), breaks = c(0,25,50,75))+
xlab("Protection (%)")+
ylab("")+
labs(title = "")+
theme(plot.margin = unit(c(0,0,0,0), "cm"))+
theme_classic()
g3
# Combined plot
jpeg(filename = "figures/coverage_dumbell_strict.jpg", width=8000, height=3500, res=600)
plot_grid(g1, g2, g3, ncol = 3, nrow = 1)
dev.off()
jpeg(filename = "figures/coverage_dumbell_strict1.jpg", width=2800, height=3400, res=700)
g1
dev.off()
jpeg(filename = "figures/coverage_dumbell_strict2.jpg", width=2800, height=3400, res=700)
g2
dev.off()
jpeg(filename = "figures/coverage_dumbell_strict3.jpg", width=2800, height=3400, res=700)
g3
dev.off()
library(terra)
library(dplyr)
library(ggplot2)
grid <- rast("grid.tif")
grid <- grid + 1
df <- read.csv("outputs/mpa_network_assessment.csv")
mpa <- rast("outputs/mpas/mpas.tif")
mpa <- app(mpa, fun = "sum")
mpa <- mpa*grid
mpa_cells <- sum(values(mpa, na.rm = T))
mpa_prop <- sum(values(mpa, na.rm = T)) / sum(values(grid, na.rm = T))
df_pres <- data.frame("budget" = mpa_prop*100,
"feature" = "All features",
"protect_prop" = mean(df$prop_mpa)/100)
inc <- c(11:20)
df <- data.frame("budget" = inc,
"feature" = "All features",
"protect_prop" = NA)
for(i in 1:length(inc)){
temp <- read.csv(paste0("outputs/prioritization_expansion_table/feature_representation_", inc[i], "percent.csv"))
#temp <- filter(temp, feature == feat) # To explore a single feature type
x <- mean(temp$relative_held)
df$protect_prop[i] <- x
}
df <- rbind(df_pres, df)
df <- df %>%
mutate(col = ifelse(row_number() == 1, "red", "black"))
exp.plot <- ggplot(df, aes(x = budget, y = protect_prop*100)) +
geom_line(data=subset(df, budget<= 11), linetype=2) +
geom_line(data=subset(df, budget>=11), linetype=1)+
geom_point(data = df, aes(color = col), size = 2) +
scale_color_manual(values = c("red" = "red", "black" = "black"),
name = "",
labels = c("Current MPA network", "Expansion scenario"),
breaks = c("red", "black")) +
scale_x_continuous(limits = c(10, 20), breaks = c(10,12,14,16,18,20))+
scale_y_continuous(limits = c(0, 100), breaks = c(0,20,40,60,80,100))+
labs(x = "Budget allocation (% of study area protected)",
y = "Mean protection (%)") +
theme_bw()+
theme(legend.position="top")
exp.plot
jpeg(filename = "figures/expansion_analysis.jpg", width=2900, height=2900, res=600)
exp.plot
dev.off()
gc()
